"""
This type stub file was generated by pyright.
"""

from typing import Any, LiteralString

import click

from .constants import DEFAULT_PROVIDER, TRANSLATION_FROM_DEFAULT

here = ...

def get_config_info(option: Any) -> str: ...
def generate_config(ctx: Any, param: Any, value: Any) -> None: ...
def print_version(ctx: Any, param: Any, value: Any) -> None: ...
@click.command()
@click.option("from_lang", "-f", default=TRANSLATION_FROM_DEFAULT, prompt="Translate from")
@click.option("to_lang", "-t", prompt="Translate to")
@click.option("provider", "-p", default=DEFAULT_PROVIDER, prompt="Provider")
@click.option("secret_access_key", "-s", default="", prompt="Secret Access Key", required=False)
@click.pass_context
def config_file(ctx: Any, from_lang: Any, to_lang: Any, provider: Any, secret_access_key: Any) -> None: ...
@click.command()
@click.option(
    "--version",
    callback=print_version,
    expose_value=False,
    is_flag=True,
    is_eager=True,
    help="Show the version and exit.",
)
@click.option(
    "--generate-config-file",
    callback=generate_config,
    expose_value=False,
    is_flag=True,
    is_eager=True,
    help="Generated the config file using a Wizard and exit.",
)
@click.option(
    "from_lang",
    "--from",
    "-f",
    default=get_config_info("from_lang") or TRANSLATION_FROM_DEFAULT,
    help="Sets the language of the text being translated. The default value is 'autodetect'.",
)
@click.option(
    "to_lang",
    "--to",
    "-t",
    default=get_config_info("to_lang"),
    prompt="Translate to",
    help="Sets the language you want to translate.",
)
@click.option(
    "provider",
    "--provider",
    "-p",
    default=get_config_info("provider") or DEFAULT_PROVIDER,
    help="Set the provider you want to use. The default value is '{}'.".format(DEFAULT_PROVIDER),
)
@click.option(
    "secret_access_key",
    "--secret_access_key",
    default=get_config_info("secret_access_key"),
    help="Set the secret access key used to get provider oAuth token.",
    required=False,
)
@click.option(
    "output_only",
    "--output_only",
    "-o",
    default=False,
    is_flag=True,
    help="Set to display the translation only.",
    required=False,
)
@click.option(
    "pro",
    "--pro",
    default=False,
    is_flag=True,
    help="Set to use DeepL's pro API.",
    required=False,
)
@click.argument("text", nargs=-1, type=click.STRING, required=True)
def main(
    from_lang: Any,
    to_lang: Any,
    provider: Any,
    secret_access_key: Any,
    output_only: Any,
    pro: Any,
    text: Any,
) -> bytes | LiteralString:
    """
    Python command line tool to make on line translations

    \b
    Example:
    \b
    \t $ translate-cli -t zh the book is on the table
    \t 碗是在桌子上。

    \b
    Available languages:
    \b
    \t https://en.wikipedia.org/wiki/ISO_639-1
    \t Examples: (e.g. en, ja, ko, pt, zh, zh-TW, ...)
    """
    ...
